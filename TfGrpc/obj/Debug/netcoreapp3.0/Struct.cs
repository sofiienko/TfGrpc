// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: tensorflow/core/protobuf/struct.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Tensorflow {

  /// <summary>Holder for reflection information generated from tensorflow/core/protobuf/struct.proto</summary>
  public static partial class StructReflection {

    #region Descriptor
    /// <summary>File descriptor for tensorflow/core/protobuf/struct.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static StructReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiV0ZW5zb3JmbG93L2NvcmUvcHJvdG9idWYvc3RydWN0LnByb3RvEgp0ZW5z",
            "b3JmbG93Gix0ZW5zb3JmbG93L2NvcmUvZnJhbWV3b3JrL3RlbnNvcl9zaGFw",
            "ZS5wcm90bxoldGVuc29yZmxvdy9jb3JlL2ZyYW1ld29yay90eXBlcy5wcm90",
            "byLHBAoPU3RydWN0dXJlZFZhbHVlEisKCm5vbmVfdmFsdWUYASABKAsyFS50",
            "ZW5zb3JmbG93Lk5vbmVWYWx1ZUgAEhcKDWZsb2F0NjRfdmFsdWUYCyABKAFI",
            "ABIVCgtpbnQ2NF92YWx1ZRgMIAEoEkgAEhYKDHN0cmluZ192YWx1ZRgNIAEo",
            "CUgAEhQKCmJvb2xfdmFsdWUYDiABKAhIABI6ChJ0ZW5zb3Jfc2hhcGVfdmFs",
            "dWUYHyABKAsyHC50ZW5zb3JmbG93LlRlbnNvclNoYXBlUHJvdG9IABIyChJ0",
            "ZW5zb3JfZHR5cGVfdmFsdWUYICABKA4yFC50ZW5zb3JmbG93LkRhdGFUeXBl",
            "SAASOAoRdGVuc29yX3NwZWNfdmFsdWUYISABKAsyGy50ZW5zb3JmbG93LlRl",
            "bnNvclNwZWNQcm90b0gAEjQKD3R5cGVfc3BlY192YWx1ZRgiIAEoCzIZLnRl",
            "bnNvcmZsb3cuVHlwZVNwZWNQcm90b0gAEisKCmxpc3RfdmFsdWUYMyABKAsy",
            "FS50ZW5zb3JmbG93Lkxpc3RWYWx1ZUgAEi0KC3R1cGxlX3ZhbHVlGDQgASgL",
            "MhYudGVuc29yZmxvdy5UdXBsZVZhbHVlSAASKwoKZGljdF92YWx1ZRg1IAEo",
            "CzIVLnRlbnNvcmZsb3cuRGljdFZhbHVlSAASOAoRbmFtZWRfdHVwbGVfdmFs",
            "dWUYNiABKAsyGy50ZW5zb3JmbG93Lk5hbWVkVHVwbGVWYWx1ZUgAQgYKBGtp",
            "bmQiCwoJTm9uZVZhbHVlIjgKCUxpc3RWYWx1ZRIrCgZ2YWx1ZXMYASADKAsy",
            "Gy50ZW5zb3JmbG93LlN0cnVjdHVyZWRWYWx1ZSI5CgpUdXBsZVZhbHVlEisK",
            "BnZhbHVlcxgBIAMoCzIbLnRlbnNvcmZsb3cuU3RydWN0dXJlZFZhbHVlIooB",
            "CglEaWN0VmFsdWUSMQoGZmllbGRzGAEgAygLMiEudGVuc29yZmxvdy5EaWN0",
            "VmFsdWUuRmllbGRzRW50cnkaSgoLRmllbGRzRW50cnkSCwoDa2V5GAEgASgJ",
            "EioKBXZhbHVlGAIgASgLMhsudGVuc29yZmxvdy5TdHJ1Y3R1cmVkVmFsdWU6",
            "AjgBIkQKCVBhaXJWYWx1ZRILCgNrZXkYASABKAkSKgoFdmFsdWUYAiABKAsy",
            "Gy50ZW5zb3JmbG93LlN0cnVjdHVyZWRWYWx1ZSJGCg9OYW1lZFR1cGxlVmFs",
            "dWUSDAoEbmFtZRgBIAEoCRIlCgZ2YWx1ZXMYAiADKAsyFS50ZW5zb3JmbG93",
            "LlBhaXJWYWx1ZSJxCg9UZW5zb3JTcGVjUHJvdG8SDAoEbmFtZRgBIAEoCRIr",
            "CgVzaGFwZRgCIAEoCzIcLnRlbnNvcmZsb3cuVGVuc29yU2hhcGVQcm90bxIj",
            "CgVkdHlwZRgDIAEoDjIULnRlbnNvcmZsb3cuRGF0YVR5cGUi9wIKDVR5cGVT",
            "cGVjUHJvdG8SQAoPdHlwZV9zcGVjX2NsYXNzGAEgASgOMicudGVuc29yZmxv",
            "dy5UeXBlU3BlY1Byb3RvLlR5cGVTcGVjQ2xhc3MSLwoKdHlwZV9zdGF0ZRgC",
            "IAEoCzIbLnRlbnNvcmZsb3cuU3RydWN0dXJlZFZhbHVlEhwKFHR5cGVfc3Bl",
            "Y19jbGFzc19uYW1lGAMgASgJItQBCg1UeXBlU3BlY0NsYXNzEgsKB1VOS05P",
            "V04QABIWChJTUEFSU0VfVEVOU09SX1NQRUMQARIXChNJTkRFWEVEX1NMSUNF",
            "U19TUEVDEAISFgoSUkFHR0VEX1RFTlNPUl9TUEVDEAMSFQoRVEVOU09SX0FS",
            "UkFZX1NQRUMQBBIVChFEQVRBX0RBVEFTRVRfU1BFQxAFEhYKEkRBVEFfSVRF",
            "UkFUT1JfU1BFQxAGEhEKDU9QVElPTkFMX1NQRUMQBxIUChBQRVJfUkVQTElD",
            "QV9TUEVDEAhiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Tensorflow.TensorShapeReflection.Descriptor, global::Tensorflow.TypesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Tensorflow.StructuredValue), global::Tensorflow.StructuredValue.Parser, new[]{ "NoneValue", "Float64Value", "Int64Value", "StringValue", "BoolValue", "TensorShapeValue", "TensorDtypeValue", "TensorSpecValue", "TypeSpecValue", "ListValue", "TupleValue", "DictValue", "NamedTupleValue" }, new[]{ "Kind" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tensorflow.NoneValue), global::Tensorflow.NoneValue.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tensorflow.ListValue), global::Tensorflow.ListValue.Parser, new[]{ "Values" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tensorflow.TupleValue), global::Tensorflow.TupleValue.Parser, new[]{ "Values" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tensorflow.DictValue), global::Tensorflow.DictValue.Parser, new[]{ "Fields" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tensorflow.PairValue), global::Tensorflow.PairValue.Parser, new[]{ "Key", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tensorflow.NamedTupleValue), global::Tensorflow.NamedTupleValue.Parser, new[]{ "Name", "Values" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tensorflow.TensorSpecProto), global::Tensorflow.TensorSpecProto.Parser, new[]{ "Name", "Shape", "Dtype" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tensorflow.TypeSpecProto), global::Tensorflow.TypeSpecProto.Parser, new[]{ "TypeSpecClass", "TypeState", "TypeSpecClassName" }, null, new[]{ typeof(global::Tensorflow.TypeSpecProto.Types.TypeSpecClass) }, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// `StructuredValue` represents a dynamically typed value representing various
  /// data structures that are inspired by Python data structures typically used in
  /// TensorFlow functions as inputs and outputs.
  ///
  /// For example when saving a Layer there may be a `training` argument. If the
  /// user passes a boolean True/False, that switches between two concrete
  /// TensorFlow functions. In order to switch between them in the same way after
  /// loading the SavedModel, we need to represent "True" and "False".
  ///
  /// A more advanced example might be a function which takes a list of
  /// dictionaries mapping from strings to Tensors. In order to map from
  /// user-specified arguments `[{"a": tf.constant(1.)}, {"q": tf.constant(3.)}]`
  /// after load to the right saved TensorFlow function, we need to represent the
  /// nested structure and the strings, recording that we have a trace for anything
  /// matching `[{"a": tf.TensorSpec(None, tf.float32)}, {"q": tf.TensorSpec([],
  /// tf.float64)}]` as an example.
  ///
  /// Likewise functions may return nested structures of Tensors, for example
  /// returning a dictionary mapping from strings to Tensors. In order for the
  /// loaded function to return the same structure we need to serialize it.
  ///
  /// This is an ergonomic aid for working with loaded SavedModels, not a promise
  /// to serialize all possible function signatures. For example we do not expect
  /// to pickle generic Python objects, and ideally we'd stay language-agnostic.
  /// </summary>
  public sealed partial class StructuredValue : pb::IMessage<StructuredValue> {
    private static readonly pb::MessageParser<StructuredValue> _parser = new pb::MessageParser<StructuredValue>(() => new StructuredValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StructuredValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tensorflow.StructReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StructuredValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StructuredValue(StructuredValue other) : this() {
      switch (other.KindCase) {
        case KindOneofCase.NoneValue:
          NoneValue = other.NoneValue.Clone();
          break;
        case KindOneofCase.Float64Value:
          Float64Value = other.Float64Value;
          break;
        case KindOneofCase.Int64Value:
          Int64Value = other.Int64Value;
          break;
        case KindOneofCase.StringValue:
          StringValue = other.StringValue;
          break;
        case KindOneofCase.BoolValue:
          BoolValue = other.BoolValue;
          break;
        case KindOneofCase.TensorShapeValue:
          TensorShapeValue = other.TensorShapeValue.Clone();
          break;
        case KindOneofCase.TensorDtypeValue:
          TensorDtypeValue = other.TensorDtypeValue;
          break;
        case KindOneofCase.TensorSpecValue:
          TensorSpecValue = other.TensorSpecValue.Clone();
          break;
        case KindOneofCase.TypeSpecValue:
          TypeSpecValue = other.TypeSpecValue.Clone();
          break;
        case KindOneofCase.ListValue:
          ListValue = other.ListValue.Clone();
          break;
        case KindOneofCase.TupleValue:
          TupleValue = other.TupleValue.Clone();
          break;
        case KindOneofCase.DictValue:
          DictValue = other.DictValue.Clone();
          break;
        case KindOneofCase.NamedTupleValue:
          NamedTupleValue = other.NamedTupleValue.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StructuredValue Clone() {
      return new StructuredValue(this);
    }

    /// <summary>Field number for the "none_value" field.</summary>
    public const int NoneValueFieldNumber = 1;
    /// <summary>
    /// Represents None.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tensorflow.NoneValue NoneValue {
      get { return kindCase_ == KindOneofCase.NoneValue ? (global::Tensorflow.NoneValue) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.NoneValue;
      }
    }

    /// <summary>Field number for the "float64_value" field.</summary>
    public const int Float64ValueFieldNumber = 11;
    /// <summary>
    /// Represents a double-precision floating-point value (a Python `float`).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Float64Value {
      get { return kindCase_ == KindOneofCase.Float64Value ? (double) kind_ : 0D; }
      set {
        kind_ = value;
        kindCase_ = KindOneofCase.Float64Value;
      }
    }

    /// <summary>Field number for the "int64_value" field.</summary>
    public const int Int64ValueFieldNumber = 12;
    /// <summary>
    /// Represents a signed integer value, limited to 64 bits.
    /// Larger values from Python's arbitrary-precision integers are unsupported.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Int64Value {
      get { return kindCase_ == KindOneofCase.Int64Value ? (long) kind_ : 0L; }
      set {
        kind_ = value;
        kindCase_ = KindOneofCase.Int64Value;
      }
    }

    /// <summary>Field number for the "string_value" field.</summary>
    public const int StringValueFieldNumber = 13;
    /// <summary>
    /// Represents a string of Unicode characters stored in a Python `str`.
    /// In Python 3, this is exactly what type `str` is.
    /// In Python 2, this is the UTF-8 encoding of the characters.
    /// For strings with ASCII characters only (as often used in TensorFlow code)
    /// there is effectively no difference between the language versions.
    /// The obsolescent `unicode` type of Python 2 is not supported here.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StringValue {
      get { return kindCase_ == KindOneofCase.StringValue ? (string) kind_ : ""; }
      set {
        kind_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        kindCase_ = KindOneofCase.StringValue;
      }
    }

    /// <summary>Field number for the "bool_value" field.</summary>
    public const int BoolValueFieldNumber = 14;
    /// <summary>
    /// Represents a boolean value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool BoolValue {
      get { return kindCase_ == KindOneofCase.BoolValue ? (bool) kind_ : false; }
      set {
        kind_ = value;
        kindCase_ = KindOneofCase.BoolValue;
      }
    }

    /// <summary>Field number for the "tensor_shape_value" field.</summary>
    public const int TensorShapeValueFieldNumber = 31;
    /// <summary>
    /// Represents a TensorShape.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tensorflow.TensorShapeProto TensorShapeValue {
      get { return kindCase_ == KindOneofCase.TensorShapeValue ? (global::Tensorflow.TensorShapeProto) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.TensorShapeValue;
      }
    }

    /// <summary>Field number for the "tensor_dtype_value" field.</summary>
    public const int TensorDtypeValueFieldNumber = 32;
    /// <summary>
    /// Represents an enum value for dtype.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tensorflow.DataType TensorDtypeValue {
      get { return kindCase_ == KindOneofCase.TensorDtypeValue ? (global::Tensorflow.DataType) kind_ : 0; }
      set {
        kind_ = value;
        kindCase_ = KindOneofCase.TensorDtypeValue;
      }
    }

    /// <summary>Field number for the "tensor_spec_value" field.</summary>
    public const int TensorSpecValueFieldNumber = 33;
    /// <summary>
    /// Represents a value for tf.TensorSpec.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tensorflow.TensorSpecProto TensorSpecValue {
      get { return kindCase_ == KindOneofCase.TensorSpecValue ? (global::Tensorflow.TensorSpecProto) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.TensorSpecValue;
      }
    }

    /// <summary>Field number for the "type_spec_value" field.</summary>
    public const int TypeSpecValueFieldNumber = 34;
    /// <summary>
    /// Represents a value for tf.TypeSpec.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tensorflow.TypeSpecProto TypeSpecValue {
      get { return kindCase_ == KindOneofCase.TypeSpecValue ? (global::Tensorflow.TypeSpecProto) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.TypeSpecValue;
      }
    }

    /// <summary>Field number for the "list_value" field.</summary>
    public const int ListValueFieldNumber = 51;
    /// <summary>
    /// Represents a list of `Value`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tensorflow.ListValue ListValue {
      get { return kindCase_ == KindOneofCase.ListValue ? (global::Tensorflow.ListValue) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.ListValue;
      }
    }

    /// <summary>Field number for the "tuple_value" field.</summary>
    public const int TupleValueFieldNumber = 52;
    /// <summary>
    /// Represents a tuple of `Value`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tensorflow.TupleValue TupleValue {
      get { return kindCase_ == KindOneofCase.TupleValue ? (global::Tensorflow.TupleValue) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.TupleValue;
      }
    }

    /// <summary>Field number for the "dict_value" field.</summary>
    public const int DictValueFieldNumber = 53;
    /// <summary>
    /// Represents a dict `Value`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tensorflow.DictValue DictValue {
      get { return kindCase_ == KindOneofCase.DictValue ? (global::Tensorflow.DictValue) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.DictValue;
      }
    }

    /// <summary>Field number for the "named_tuple_value" field.</summary>
    public const int NamedTupleValueFieldNumber = 54;
    /// <summary>
    /// Represents Python's namedtuple.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tensorflow.NamedTupleValue NamedTupleValue {
      get { return kindCase_ == KindOneofCase.NamedTupleValue ? (global::Tensorflow.NamedTupleValue) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.NamedTupleValue;
      }
    }

    private object kind_;
    /// <summary>Enum of possible cases for the "kind" oneof.</summary>
    public enum KindOneofCase {
      None = 0,
      NoneValue = 1,
      Float64Value = 11,
      Int64Value = 12,
      StringValue = 13,
      BoolValue = 14,
      TensorShapeValue = 31,
      TensorDtypeValue = 32,
      TensorSpecValue = 33,
      TypeSpecValue = 34,
      ListValue = 51,
      TupleValue = 52,
      DictValue = 53,
      NamedTupleValue = 54,
    }
    private KindOneofCase kindCase_ = KindOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KindOneofCase KindCase {
      get { return kindCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearKind() {
      kindCase_ = KindOneofCase.None;
      kind_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StructuredValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StructuredValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(NoneValue, other.NoneValue)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Float64Value, other.Float64Value)) return false;
      if (Int64Value != other.Int64Value) return false;
      if (StringValue != other.StringValue) return false;
      if (BoolValue != other.BoolValue) return false;
      if (!object.Equals(TensorShapeValue, other.TensorShapeValue)) return false;
      if (TensorDtypeValue != other.TensorDtypeValue) return false;
      if (!object.Equals(TensorSpecValue, other.TensorSpecValue)) return false;
      if (!object.Equals(TypeSpecValue, other.TypeSpecValue)) return false;
      if (!object.Equals(ListValue, other.ListValue)) return false;
      if (!object.Equals(TupleValue, other.TupleValue)) return false;
      if (!object.Equals(DictValue, other.DictValue)) return false;
      if (!object.Equals(NamedTupleValue, other.NamedTupleValue)) return false;
      if (KindCase != other.KindCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (kindCase_ == KindOneofCase.NoneValue) hash ^= NoneValue.GetHashCode();
      if (kindCase_ == KindOneofCase.Float64Value) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Float64Value);
      if (kindCase_ == KindOneofCase.Int64Value) hash ^= Int64Value.GetHashCode();
      if (kindCase_ == KindOneofCase.StringValue) hash ^= StringValue.GetHashCode();
      if (kindCase_ == KindOneofCase.BoolValue) hash ^= BoolValue.GetHashCode();
      if (kindCase_ == KindOneofCase.TensorShapeValue) hash ^= TensorShapeValue.GetHashCode();
      if (kindCase_ == KindOneofCase.TensorDtypeValue) hash ^= TensorDtypeValue.GetHashCode();
      if (kindCase_ == KindOneofCase.TensorSpecValue) hash ^= TensorSpecValue.GetHashCode();
      if (kindCase_ == KindOneofCase.TypeSpecValue) hash ^= TypeSpecValue.GetHashCode();
      if (kindCase_ == KindOneofCase.ListValue) hash ^= ListValue.GetHashCode();
      if (kindCase_ == KindOneofCase.TupleValue) hash ^= TupleValue.GetHashCode();
      if (kindCase_ == KindOneofCase.DictValue) hash ^= DictValue.GetHashCode();
      if (kindCase_ == KindOneofCase.NamedTupleValue) hash ^= NamedTupleValue.GetHashCode();
      hash ^= (int) kindCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (kindCase_ == KindOneofCase.NoneValue) {
        output.WriteRawTag(10);
        output.WriteMessage(NoneValue);
      }
      if (kindCase_ == KindOneofCase.Float64Value) {
        output.WriteRawTag(89);
        output.WriteDouble(Float64Value);
      }
      if (kindCase_ == KindOneofCase.Int64Value) {
        output.WriteRawTag(96);
        output.WriteSInt64(Int64Value);
      }
      if (kindCase_ == KindOneofCase.StringValue) {
        output.WriteRawTag(106);
        output.WriteString(StringValue);
      }
      if (kindCase_ == KindOneofCase.BoolValue) {
        output.WriteRawTag(112);
        output.WriteBool(BoolValue);
      }
      if (kindCase_ == KindOneofCase.TensorShapeValue) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(TensorShapeValue);
      }
      if (kindCase_ == KindOneofCase.TensorDtypeValue) {
        output.WriteRawTag(128, 2);
        output.WriteEnum((int) TensorDtypeValue);
      }
      if (kindCase_ == KindOneofCase.TensorSpecValue) {
        output.WriteRawTag(138, 2);
        output.WriteMessage(TensorSpecValue);
      }
      if (kindCase_ == KindOneofCase.TypeSpecValue) {
        output.WriteRawTag(146, 2);
        output.WriteMessage(TypeSpecValue);
      }
      if (kindCase_ == KindOneofCase.ListValue) {
        output.WriteRawTag(154, 3);
        output.WriteMessage(ListValue);
      }
      if (kindCase_ == KindOneofCase.TupleValue) {
        output.WriteRawTag(162, 3);
        output.WriteMessage(TupleValue);
      }
      if (kindCase_ == KindOneofCase.DictValue) {
        output.WriteRawTag(170, 3);
        output.WriteMessage(DictValue);
      }
      if (kindCase_ == KindOneofCase.NamedTupleValue) {
        output.WriteRawTag(178, 3);
        output.WriteMessage(NamedTupleValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (kindCase_ == KindOneofCase.NoneValue) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NoneValue);
      }
      if (kindCase_ == KindOneofCase.Float64Value) {
        size += 1 + 8;
      }
      if (kindCase_ == KindOneofCase.Int64Value) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(Int64Value);
      }
      if (kindCase_ == KindOneofCase.StringValue) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StringValue);
      }
      if (kindCase_ == KindOneofCase.BoolValue) {
        size += 1 + 1;
      }
      if (kindCase_ == KindOneofCase.TensorShapeValue) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TensorShapeValue);
      }
      if (kindCase_ == KindOneofCase.TensorDtypeValue) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) TensorDtypeValue);
      }
      if (kindCase_ == KindOneofCase.TensorSpecValue) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TensorSpecValue);
      }
      if (kindCase_ == KindOneofCase.TypeSpecValue) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TypeSpecValue);
      }
      if (kindCase_ == KindOneofCase.ListValue) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ListValue);
      }
      if (kindCase_ == KindOneofCase.TupleValue) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TupleValue);
      }
      if (kindCase_ == KindOneofCase.DictValue) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DictValue);
      }
      if (kindCase_ == KindOneofCase.NamedTupleValue) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NamedTupleValue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StructuredValue other) {
      if (other == null) {
        return;
      }
      switch (other.KindCase) {
        case KindOneofCase.NoneValue:
          if (NoneValue == null) {
            NoneValue = new global::Tensorflow.NoneValue();
          }
          NoneValue.MergeFrom(other.NoneValue);
          break;
        case KindOneofCase.Float64Value:
          Float64Value = other.Float64Value;
          break;
        case KindOneofCase.Int64Value:
          Int64Value = other.Int64Value;
          break;
        case KindOneofCase.StringValue:
          StringValue = other.StringValue;
          break;
        case KindOneofCase.BoolValue:
          BoolValue = other.BoolValue;
          break;
        case KindOneofCase.TensorShapeValue:
          if (TensorShapeValue == null) {
            TensorShapeValue = new global::Tensorflow.TensorShapeProto();
          }
          TensorShapeValue.MergeFrom(other.TensorShapeValue);
          break;
        case KindOneofCase.TensorDtypeValue:
          TensorDtypeValue = other.TensorDtypeValue;
          break;
        case KindOneofCase.TensorSpecValue:
          if (TensorSpecValue == null) {
            TensorSpecValue = new global::Tensorflow.TensorSpecProto();
          }
          TensorSpecValue.MergeFrom(other.TensorSpecValue);
          break;
        case KindOneofCase.TypeSpecValue:
          if (TypeSpecValue == null) {
            TypeSpecValue = new global::Tensorflow.TypeSpecProto();
          }
          TypeSpecValue.MergeFrom(other.TypeSpecValue);
          break;
        case KindOneofCase.ListValue:
          if (ListValue == null) {
            ListValue = new global::Tensorflow.ListValue();
          }
          ListValue.MergeFrom(other.ListValue);
          break;
        case KindOneofCase.TupleValue:
          if (TupleValue == null) {
            TupleValue = new global::Tensorflow.TupleValue();
          }
          TupleValue.MergeFrom(other.TupleValue);
          break;
        case KindOneofCase.DictValue:
          if (DictValue == null) {
            DictValue = new global::Tensorflow.DictValue();
          }
          DictValue.MergeFrom(other.DictValue);
          break;
        case KindOneofCase.NamedTupleValue:
          if (NamedTupleValue == null) {
            NamedTupleValue = new global::Tensorflow.NamedTupleValue();
          }
          NamedTupleValue.MergeFrom(other.NamedTupleValue);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Tensorflow.NoneValue subBuilder = new global::Tensorflow.NoneValue();
            if (kindCase_ == KindOneofCase.NoneValue) {
              subBuilder.MergeFrom(NoneValue);
            }
            input.ReadMessage(subBuilder);
            NoneValue = subBuilder;
            break;
          }
          case 89: {
            Float64Value = input.ReadDouble();
            break;
          }
          case 96: {
            Int64Value = input.ReadSInt64();
            break;
          }
          case 106: {
            StringValue = input.ReadString();
            break;
          }
          case 112: {
            BoolValue = input.ReadBool();
            break;
          }
          case 250: {
            global::Tensorflow.TensorShapeProto subBuilder = new global::Tensorflow.TensorShapeProto();
            if (kindCase_ == KindOneofCase.TensorShapeValue) {
              subBuilder.MergeFrom(TensorShapeValue);
            }
            input.ReadMessage(subBuilder);
            TensorShapeValue = subBuilder;
            break;
          }
          case 256: {
            kind_ = input.ReadEnum();
            kindCase_ = KindOneofCase.TensorDtypeValue;
            break;
          }
          case 266: {
            global::Tensorflow.TensorSpecProto subBuilder = new global::Tensorflow.TensorSpecProto();
            if (kindCase_ == KindOneofCase.TensorSpecValue) {
              subBuilder.MergeFrom(TensorSpecValue);
            }
            input.ReadMessage(subBuilder);
            TensorSpecValue = subBuilder;
            break;
          }
          case 274: {
            global::Tensorflow.TypeSpecProto subBuilder = new global::Tensorflow.TypeSpecProto();
            if (kindCase_ == KindOneofCase.TypeSpecValue) {
              subBuilder.MergeFrom(TypeSpecValue);
            }
            input.ReadMessage(subBuilder);
            TypeSpecValue = subBuilder;
            break;
          }
          case 410: {
            global::Tensorflow.ListValue subBuilder = new global::Tensorflow.ListValue();
            if (kindCase_ == KindOneofCase.ListValue) {
              subBuilder.MergeFrom(ListValue);
            }
            input.ReadMessage(subBuilder);
            ListValue = subBuilder;
            break;
          }
          case 418: {
            global::Tensorflow.TupleValue subBuilder = new global::Tensorflow.TupleValue();
            if (kindCase_ == KindOneofCase.TupleValue) {
              subBuilder.MergeFrom(TupleValue);
            }
            input.ReadMessage(subBuilder);
            TupleValue = subBuilder;
            break;
          }
          case 426: {
            global::Tensorflow.DictValue subBuilder = new global::Tensorflow.DictValue();
            if (kindCase_ == KindOneofCase.DictValue) {
              subBuilder.MergeFrom(DictValue);
            }
            input.ReadMessage(subBuilder);
            DictValue = subBuilder;
            break;
          }
          case 434: {
            global::Tensorflow.NamedTupleValue subBuilder = new global::Tensorflow.NamedTupleValue();
            if (kindCase_ == KindOneofCase.NamedTupleValue) {
              subBuilder.MergeFrom(NamedTupleValue);
            }
            input.ReadMessage(subBuilder);
            NamedTupleValue = subBuilder;
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Represents None.
  /// </summary>
  public sealed partial class NoneValue : pb::IMessage<NoneValue> {
    private static readonly pb::MessageParser<NoneValue> _parser = new pb::MessageParser<NoneValue>(() => new NoneValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NoneValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tensorflow.StructReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NoneValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NoneValue(NoneValue other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NoneValue Clone() {
      return new NoneValue(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NoneValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NoneValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NoneValue other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// Represents a Python list.
  /// </summary>
  public sealed partial class ListValue : pb::IMessage<ListValue> {
    private static readonly pb::MessageParser<ListValue> _parser = new pb::MessageParser<ListValue>(() => new ListValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tensorflow.StructReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListValue(ListValue other) : this() {
      values_ = other.values_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListValue Clone() {
      return new ListValue(this);
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Tensorflow.StructuredValue> _repeated_values_codec
        = pb::FieldCodec.ForMessage(10, global::Tensorflow.StructuredValue.Parser);
    private readonly pbc::RepeatedField<global::Tensorflow.StructuredValue> values_ = new pbc::RepeatedField<global::Tensorflow.StructuredValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tensorflow.StructuredValue> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      values_.WriteTo(output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListValue other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Represents a Python tuple.
  /// </summary>
  public sealed partial class TupleValue : pb::IMessage<TupleValue> {
    private static readonly pb::MessageParser<TupleValue> _parser = new pb::MessageParser<TupleValue>(() => new TupleValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TupleValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tensorflow.StructReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TupleValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TupleValue(TupleValue other) : this() {
      values_ = other.values_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TupleValue Clone() {
      return new TupleValue(this);
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Tensorflow.StructuredValue> _repeated_values_codec
        = pb::FieldCodec.ForMessage(10, global::Tensorflow.StructuredValue.Parser);
    private readonly pbc::RepeatedField<global::Tensorflow.StructuredValue> values_ = new pbc::RepeatedField<global::Tensorflow.StructuredValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tensorflow.StructuredValue> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TupleValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TupleValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      values_.WriteTo(output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TupleValue other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Represents a Python dict keyed by `str`.
  /// The comment on Unicode from Value.string_value applies analogously.
  /// </summary>
  public sealed partial class DictValue : pb::IMessage<DictValue> {
    private static readonly pb::MessageParser<DictValue> _parser = new pb::MessageParser<DictValue>(() => new DictValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DictValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tensorflow.StructReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DictValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DictValue(DictValue other) : this() {
      fields_ = other.fields_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DictValue Clone() {
      return new DictValue(this);
    }

    /// <summary>Field number for the "fields" field.</summary>
    public const int FieldsFieldNumber = 1;
    private static readonly pbc::MapField<string, global::Tensorflow.StructuredValue>.Codec _map_fields_codec
        = new pbc::MapField<string, global::Tensorflow.StructuredValue>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::Tensorflow.StructuredValue.Parser), 10);
    private readonly pbc::MapField<string, global::Tensorflow.StructuredValue> fields_ = new pbc::MapField<string, global::Tensorflow.StructuredValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Tensorflow.StructuredValue> Fields {
      get { return fields_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DictValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DictValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Fields.Equals(other.Fields)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Fields.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      fields_.WriteTo(output, _map_fields_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += fields_.CalculateSize(_map_fields_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DictValue other) {
      if (other == null) {
        return;
      }
      fields_.Add(other.fields_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            fields_.AddEntriesFrom(input, _map_fields_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Represents a (key, value) pair.
  /// </summary>
  public sealed partial class PairValue : pb::IMessage<PairValue> {
    private static readonly pb::MessageParser<PairValue> _parser = new pb::MessageParser<PairValue>(() => new PairValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PairValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tensorflow.StructReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PairValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PairValue(PairValue other) : this() {
      key_ = other.key_;
      value_ = other.value_ != null ? other.value_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PairValue Clone() {
      return new PairValue(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private global::Tensorflow.StructuredValue value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tensorflow.StructuredValue Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PairValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PairValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (!object.Equals(Value, other.Value)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (value_ != null) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (value_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (value_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PairValue other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.value_ != null) {
        if (value_ == null) {
          Value = new global::Tensorflow.StructuredValue();
        }
        Value.MergeFrom(other.Value);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            if (value_ == null) {
              Value = new global::Tensorflow.StructuredValue();
            }
            input.ReadMessage(Value);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Represents Python's namedtuple.
  /// </summary>
  public sealed partial class NamedTupleValue : pb::IMessage<NamedTupleValue> {
    private static readonly pb::MessageParser<NamedTupleValue> _parser = new pb::MessageParser<NamedTupleValue>(() => new NamedTupleValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NamedTupleValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tensorflow.StructReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NamedTupleValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NamedTupleValue(NamedTupleValue other) : this() {
      name_ = other.name_;
      values_ = other.values_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NamedTupleValue Clone() {
      return new NamedTupleValue(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Tensorflow.PairValue> _repeated_values_codec
        = pb::FieldCodec.ForMessage(18, global::Tensorflow.PairValue.Parser);
    private readonly pbc::RepeatedField<global::Tensorflow.PairValue> values_ = new pbc::RepeatedField<global::Tensorflow.PairValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tensorflow.PairValue> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NamedTupleValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NamedTupleValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if(!values_.Equals(other.values_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= values_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      values_.WriteTo(output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += values_.CalculateSize(_repeated_values_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NamedTupleValue other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      values_.Add(other.values_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A protobuf to tf.TensorSpec.
  /// </summary>
  public sealed partial class TensorSpecProto : pb::IMessage<TensorSpecProto> {
    private static readonly pb::MessageParser<TensorSpecProto> _parser = new pb::MessageParser<TensorSpecProto>(() => new TensorSpecProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TensorSpecProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tensorflow.StructReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TensorSpecProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TensorSpecProto(TensorSpecProto other) : this() {
      name_ = other.name_;
      shape_ = other.shape_ != null ? other.shape_.Clone() : null;
      dtype_ = other.dtype_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TensorSpecProto Clone() {
      return new TensorSpecProto(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "shape" field.</summary>
    public const int ShapeFieldNumber = 2;
    private global::Tensorflow.TensorShapeProto shape_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tensorflow.TensorShapeProto Shape {
      get { return shape_; }
      set {
        shape_ = value;
      }
    }

    /// <summary>Field number for the "dtype" field.</summary>
    public const int DtypeFieldNumber = 3;
    private global::Tensorflow.DataType dtype_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tensorflow.DataType Dtype {
      get { return dtype_; }
      set {
        dtype_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TensorSpecProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TensorSpecProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(Shape, other.Shape)) return false;
      if (Dtype != other.Dtype) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (shape_ != null) hash ^= Shape.GetHashCode();
      if (Dtype != 0) hash ^= Dtype.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (shape_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Shape);
      }
      if (Dtype != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Dtype);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (shape_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Shape);
      }
      if (Dtype != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Dtype);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TensorSpecProto other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.shape_ != null) {
        if (shape_ == null) {
          Shape = new global::Tensorflow.TensorShapeProto();
        }
        Shape.MergeFrom(other.Shape);
      }
      if (other.Dtype != 0) {
        Dtype = other.Dtype;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (shape_ == null) {
              Shape = new global::Tensorflow.TensorShapeProto();
            }
            input.ReadMessage(Shape);
            break;
          }
          case 24: {
            Dtype = (global::Tensorflow.DataType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Represents a tf.TypeSpec
  /// </summary>
  public sealed partial class TypeSpecProto : pb::IMessage<TypeSpecProto> {
    private static readonly pb::MessageParser<TypeSpecProto> _parser = new pb::MessageParser<TypeSpecProto>(() => new TypeSpecProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TypeSpecProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tensorflow.StructReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeSpecProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeSpecProto(TypeSpecProto other) : this() {
      typeSpecClass_ = other.typeSpecClass_;
      typeState_ = other.typeState_ != null ? other.typeState_.Clone() : null;
      typeSpecClassName_ = other.typeSpecClassName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeSpecProto Clone() {
      return new TypeSpecProto(this);
    }

    /// <summary>Field number for the "type_spec_class" field.</summary>
    public const int TypeSpecClassFieldNumber = 1;
    private global::Tensorflow.TypeSpecProto.Types.TypeSpecClass typeSpecClass_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tensorflow.TypeSpecProto.Types.TypeSpecClass TypeSpecClass {
      get { return typeSpecClass_; }
      set {
        typeSpecClass_ = value;
      }
    }

    /// <summary>Field number for the "type_state" field.</summary>
    public const int TypeStateFieldNumber = 2;
    private global::Tensorflow.StructuredValue typeState_;
    /// <summary>
    /// The value returned by TypeSpec._serialize().
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tensorflow.StructuredValue TypeState {
      get { return typeState_; }
      set {
        typeState_ = value;
      }
    }

    /// <summary>Field number for the "type_spec_class_name" field.</summary>
    public const int TypeSpecClassNameFieldNumber = 3;
    private string typeSpecClassName_ = "";
    /// <summary>
    /// This is currently redundant with the type_spec_class enum, and is only
    /// used for error reporting.  In particular, if you use an older binary to
    /// load a newer model, and the model uses a TypeSpecClass that the older
    /// binary doesn't support, then this lets us display a useful error message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TypeSpecClassName {
      get { return typeSpecClassName_; }
      set {
        typeSpecClassName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TypeSpecProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TypeSpecProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TypeSpecClass != other.TypeSpecClass) return false;
      if (!object.Equals(TypeState, other.TypeState)) return false;
      if (TypeSpecClassName != other.TypeSpecClassName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TypeSpecClass != 0) hash ^= TypeSpecClass.GetHashCode();
      if (typeState_ != null) hash ^= TypeState.GetHashCode();
      if (TypeSpecClassName.Length != 0) hash ^= TypeSpecClassName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TypeSpecClass != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) TypeSpecClass);
      }
      if (typeState_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TypeState);
      }
      if (TypeSpecClassName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TypeSpecClassName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TypeSpecClass != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TypeSpecClass);
      }
      if (typeState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TypeState);
      }
      if (TypeSpecClassName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TypeSpecClassName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TypeSpecProto other) {
      if (other == null) {
        return;
      }
      if (other.TypeSpecClass != 0) {
        TypeSpecClass = other.TypeSpecClass;
      }
      if (other.typeState_ != null) {
        if (typeState_ == null) {
          TypeState = new global::Tensorflow.StructuredValue();
        }
        TypeState.MergeFrom(other.TypeState);
      }
      if (other.TypeSpecClassName.Length != 0) {
        TypeSpecClassName = other.TypeSpecClassName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TypeSpecClass = (global::Tensorflow.TypeSpecProto.Types.TypeSpecClass) input.ReadEnum();
            break;
          }
          case 18: {
            if (typeState_ == null) {
              TypeState = new global::Tensorflow.StructuredValue();
            }
            input.ReadMessage(TypeState);
            break;
          }
          case 26: {
            TypeSpecClassName = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the TypeSpecProto message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum TypeSpecClass {
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        /// <summary>
        /// tf.SparseTensorSpec
        /// </summary>
        [pbr::OriginalName("SPARSE_TENSOR_SPEC")] SparseTensorSpec = 1,
        /// <summary>
        /// tf.IndexedSlicesSpec
        /// </summary>
        [pbr::OriginalName("INDEXED_SLICES_SPEC")] IndexedSlicesSpec = 2,
        /// <summary>
        /// tf.RaggedTensorSpec
        /// </summary>
        [pbr::OriginalName("RAGGED_TENSOR_SPEC")] RaggedTensorSpec = 3,
        /// <summary>
        /// tf.TensorArraySpec
        /// </summary>
        [pbr::OriginalName("TENSOR_ARRAY_SPEC")] TensorArraySpec = 4,
        /// <summary>
        /// tf.data.DatasetSpec
        /// </summary>
        [pbr::OriginalName("DATA_DATASET_SPEC")] DataDatasetSpec = 5,
        /// <summary>
        /// IteratorSpec from data/ops/iterator_ops.py
        /// </summary>
        [pbr::OriginalName("DATA_ITERATOR_SPEC")] DataIteratorSpec = 6,
        /// <summary>
        /// tf.OptionalSpec
        /// </summary>
        [pbr::OriginalName("OPTIONAL_SPEC")] OptionalSpec = 7,
        /// <summary>
        /// PerReplicaSpec from distribute/values.py
        /// </summary>
        [pbr::OriginalName("PER_REPLICA_SPEC")] PerReplicaSpec = 8,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
