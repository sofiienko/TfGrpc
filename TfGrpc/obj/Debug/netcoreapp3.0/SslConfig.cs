// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: tensorflow_serving/config/ssl_config.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Tensorflow.Serving {

  /// <summary>Holder for reflection information generated from tensorflow_serving/config/ssl_config.proto</summary>
  public static partial class SslConfigReflection {

    #region Descriptor
    /// <summary>File descriptor for tensorflow_serving/config/ssl_config.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SslConfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cip0ZW5zb3JmbG93X3NlcnZpbmcvY29uZmlnL3NzbF9jb25maWcucHJvdG8S",
            "EnRlbnNvcmZsb3cuc2VydmluZyJeCglTU0xDb25maWcSEgoKc2VydmVyX2tl",
            "eRgBIAEoCRITCgtzZXJ2ZXJfY2VydBgCIAEoCRIRCgljdXN0b21fY2EYAyAB",
            "KAkSFQoNY2xpZW50X3ZlcmlmeRgEIAEoCEID+AEBYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Tensorflow.Serving.SSLConfig), global::Tensorflow.Serving.SSLConfig.Parser, new[]{ "ServerKey", "ServerCert", "CustomCa", "ClientVerify" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Configuration for a secure gRPC channel
  /// </summary>
  public sealed partial class SSLConfig : pb::IMessage<SSLConfig> {
    private static readonly pb::MessageParser<SSLConfig> _parser = new pb::MessageParser<SSLConfig>(() => new SSLConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SSLConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tensorflow.Serving.SslConfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SSLConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SSLConfig(SSLConfig other) : this() {
      serverKey_ = other.serverKey_;
      serverCert_ = other.serverCert_;
      customCa_ = other.customCa_;
      clientVerify_ = other.clientVerify_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SSLConfig Clone() {
      return new SSLConfig(this);
    }

    /// <summary>Field number for the "server_key" field.</summary>
    public const int ServerKeyFieldNumber = 1;
    private string serverKey_ = "";
    /// <summary>
    /// private server key for SSL
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServerKey {
      get { return serverKey_; }
      set {
        serverKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "server_cert" field.</summary>
    public const int ServerCertFieldNumber = 2;
    private string serverCert_ = "";
    /// <summary>
    /// public server certificate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServerCert {
      get { return serverCert_; }
      set {
        serverCert_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "custom_ca" field.</summary>
    public const int CustomCaFieldNumber = 3;
    private string customCa_ = "";
    /// <summary>
    ///  custom certificate authority
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomCa {
      get { return customCa_; }
      set {
        customCa_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_verify" field.</summary>
    public const int ClientVerifyFieldNumber = 4;
    private bool clientVerify_;
    /// <summary>
    /// valid client certificate required ?
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ClientVerify {
      get { return clientVerify_; }
      set {
        clientVerify_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SSLConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SSLConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServerKey != other.ServerKey) return false;
      if (ServerCert != other.ServerCert) return false;
      if (CustomCa != other.CustomCa) return false;
      if (ClientVerify != other.ClientVerify) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServerKey.Length != 0) hash ^= ServerKey.GetHashCode();
      if (ServerCert.Length != 0) hash ^= ServerCert.GetHashCode();
      if (CustomCa.Length != 0) hash ^= CustomCa.GetHashCode();
      if (ClientVerify != false) hash ^= ClientVerify.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ServerKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ServerKey);
      }
      if (ServerCert.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ServerCert);
      }
      if (CustomCa.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CustomCa);
      }
      if (ClientVerify != false) {
        output.WriteRawTag(32);
        output.WriteBool(ClientVerify);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServerKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServerKey);
      }
      if (ServerCert.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServerCert);
      }
      if (CustomCa.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CustomCa);
      }
      if (ClientVerify != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SSLConfig other) {
      if (other == null) {
        return;
      }
      if (other.ServerKey.Length != 0) {
        ServerKey = other.ServerKey;
      }
      if (other.ServerCert.Length != 0) {
        ServerCert = other.ServerCert;
      }
      if (other.CustomCa.Length != 0) {
        CustomCa = other.CustomCa;
      }
      if (other.ClientVerify != false) {
        ClientVerify = other.ClientVerify;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ServerKey = input.ReadString();
            break;
          }
          case 18: {
            ServerCert = input.ReadString();
            break;
          }
          case 26: {
            CustomCa = input.ReadString();
            break;
          }
          case 32: {
            ClientVerify = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
